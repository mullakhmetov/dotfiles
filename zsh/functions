# General

reload(){ source ~/.zshrc }

whoseport() {lsof -nPi:$1}

function p1() {
	ping 1.1.1.1
}

function p8() {
	ping 8.8.8.8
}

function pya() {
	ping ya.ru
}

function ttl() {
	sudo sysctl -w net.inet.ip.ttl=65
}

# VK

rtoken() {
	ssh-add -e /usr/local/lib/opensc-pkcs11.so; ssh-add -s /usr/local/lib/opensc-pkcs11.so
}
admtunnel() {
	ssh -vCNR 9000:localhost:9000 -N amullakhmetov@adm512
}
admpush() {
	local branch=$(git branch --show-current)

	printf "checkouting adm to master...\n"
	ssh -t adm512 "cd data && git cl && git com"

	printf "\npushing HEAD to adm...\n"
	git poh --force-with-lease

	printf "\ncheckouting adm to HEAD...\n"
	ssh -t adm512 "cd data && git co $branch"

}
admpushc() {
    admpush()
    printf "branch name has been copied to the clipbard"
    git branch --show-current | pbcopy
}
admmr() {
	local branch=$(git branch --show-current)

	printf "pushing HEAD to gitlab...\n"
	ssh -t adm512 "cd data && git push origin $branch $@ --force-with-lease"
}
admphpunit(){
	ssh -t adm512 "cd data && vendor/bin/phpunit $@"
}
admparatest(){
	ssh -t adm512 "cd data && vendor/bin/paratest $@"
}
admkphp(){
	ssh -t adm512 "cd data && KPHP_STOP_ON_TYPE_ERROR=0 vk kphp nostatic"
}
admhelp(){
	printf "available commands:\nhelp -- list available subcommands,\nssh -- ssh to adm, vkcom dir,\nhadoop -- ssh to adm, airflow dir,\nhadoop-dev -- ssh to hadoop dev4,\ntunnel -- open 9000 port tunnel to localhost,\npush -- push HEAD to adm,\npushc -- push HEAD to adm & copy branch name to clipbard,\nmr -- push HEAD from adm to origin and create MR,\ntest [path] -- run tests,\nparatest [path] -- run tests in parallel,\nkphp -- compile kphp on adm\n"

}
adm() {
	local args=("$@");
	local cmd="${args[@]:0:1}"
	local params=("${args[@]:1}")

	case $cmd in
	ssh)
		ssh -t adm512 "cd data; bash -l"
		;;
  hadoop)
    ssh -t adm512 "cd airflow; bash -l"
    ;;
  hadoop-dev)
    ssh -t adm512 "ssh hadoop838505; bash -l"
    ;;
	tunnel)
		admtunnel
		;;
	pushc)
		admpushc
		;;
  push)
    admpush
    ;;
	mr)
		admmr
		;;
	test*)
		admphpunit "$params"
		;;
	paratest*)
		admparatest
		;;
	kphp*)
		admkphp
		;;
	*)
		admhelp
		;;
	esac

}
amd() {
	adm $@
}

# superdao

superdao-codegen() {
	pnpm codegen;
}
superdao-build() {
	pnpm build;
}
superdao-lint() {
	pnpm lint;
}
superdao-typecheck() {
	pnpm typecheck;
}
superdao-watch() {
	pnpm sd dev:watch;
}
superdao-mup() {
	pnpm sd typeorm:up;
}
superdao-help() {
	printf "available commands:\n
help -- list available subcommands,
watch -- run next & koa,
codegen -- run code generation,
build -- build project,
lint -- run linter checks,
typecheck -- run type checks\n"
mup -- typeorm migrations run & sync,
}
superdao() {
        local args=("$@");
        local cmd="${args[@]:0:1}"
        local params=("${args[@]:1}")

        case $cmd in
	build)
		superdao-build
		;;
	lint)
		superdao-lint
		;;
	codegen)
		superdao-codegen
		;;
	typecheck)
		superdao-typecheck
		;;
	watch)
		superdao-watch
		;;
	mup)
		superdao-mup
		;;
	*)
		superdao-help
		;;
	esac
}
